stages:
  - sonarqube
  - build
  - deploy_prod
  - deploy_dev

default:
  tags:
    - website

# Template pour le build
.build_template: &build_template
  stage: build
  image: docker
  script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - cp $ENV_FILE .env
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-$ENV_SUFFIX . # Utilisez le SHA du commit pour taguer l'image
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-$ENV_SUFFIX # Poussez l'image avec le nouveau tag
    - docker image prune -f

.default_template: &deploy_template
  image: docker:latest
  script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - ssh $DEPLOY_USER@$DEPLOY_HOST "sudo mkdir -p $DEPLOY_PATH && sudo chown -R \$USER:\$USER $DEPLOY_PATH"
    - scp ./$COMPOSE_FILE $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/docker-compose.yml
    - scp $ENV_FILE $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/.env
    - echo Deploying to $DEPLOY_HOST with the following variables
    - echo DOMAIN_NAME $DOMAIN_NAME
    - echo DEPLOY_PATH $DEPLOY_PATH
    - echo ENV_FILE $ENV_FILE
    - echo ENV_SUFFIX $ENV_SUFFIX
    - echo COMPOSE_FILE $COMPOSE_FILE
    - ssh $DEPLOY_USER@$DEPLOY_HOST "
        export CI_REGISTRY=$CI_REGISTRY && 
        export CI_PROJECT_PATH=$CI_PROJECT_PATH && 
        export DOMAIN_NAME=$DOMAIN_NAME && 
        echo \"$CI_REGISTRY_PAT\" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY && 
        cd $DEPLOY_PATH && 
        export ENV_SUFFIX=${ENV_SUFFIX} && 
        export DC_IMAGE_TAG=$CI_COMMIT_SHORT_SHA && 
        echo \"DC_IMAGE_TAG=\$DC_IMAGE_TAG\" | sudo tee -a .env && 
        export CI_PROJECT_NAME=\$(echo $CI_PROJECT_NAME | tr '[:upper:]' '[:lower:]') && 
        export COMPOSE_PROJECT_NAME=$CI_PROJECT_NAME-$ENV_SUFFIX && 
        docker-compose down && 
        docker-compose pull && 
        docker-compose up -d --force-recreate"
            
build_prod:
  <<: *build_template
  variables:
    ENV_FILE: ".env.prod"
    ENV_SUFFIX: "prod"
  only:
    - main

deploy_prod:
  <<: *deploy_template
  stage: deploy_prod
  variables:
    DOMAIN_NAME: "callcenter.austral-energie.com"
    DEPLOY_PATH: "/opt/$CI_PROJECT_NAME/prod"
    ENV_FILE: ".env.prod"
    ENV_SUFFIX: "prod"
    COMPOSE_FILE: "docker-compose.yml"
  when: manual
  only:
    - main

build_dev:
  <<: *build_template
  variables:
    ENV_FILE: ".env.dev"
    ENV_SUFFIX: "dev"
  only:
    - dev

deploy_dev:
  <<: *deploy_template
  stage: deploy_dev
  variables:
    DOMAIN_NAME: "callcenter.dev.austral-energie.com"
    DEPLOY_PATH: "/opt/$CI_PROJECT_NAME/dev"
    ENV_FILE: ".env.dev"
    ENV_SUFFIX: "dev"
    COMPOSE_FILE: "dev.docker-compose.yml"
  only:
    - dev
